>作者 ： XiaXinyu
>日期 ：2021-09-25



#### 题目

![](https://z3.ax1x.com/2021/09/25/4sqv9S.png)

#### 理解

在给定字符串种找到满足是回文字符串到最长子串

#### 题解1(朴素做法)

最直观的思路就是枚举出所有子串，并对每个字串进行判断，如果是回文字符串且比当前ans值大，就更新ans

#### 代码

```java
class Solution{
    public String longestPalindrome(String s) {
    int n = s.length();
    String ans = "";
    for(int i = 0;i < n;i ++)
        for(int j = 0;j < n;j ++)
        {
            if(is_hw(s,i,j) && ans.length() < j - i + 1)
                ans = s.substring(i,j + 1);
        }
    return ans;
    }

    public boolean is_hw(String s,int i,int j){
        while(i < j){
            if(s.charAt(i) != s.charAt(j)) return false;
            i ++;
            j --;
        }
        return true;
    }
    
}
```



`时间复杂度` ：O(n^3) 两层for循环枚举出所有子串，一层while循环判断是否是回文字符串

`空间复杂度` ：O(1) 


